services:
  db:
    image: postgres
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres_data
    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      retries: 5
      start_period: 30s
      timeout: 5s
    ports:
      - "5432:5432"
    networks:
      - backend
  dev:
    container_name: dev
    build:
      context: ./db
      dockerfile: ../Dockerfile
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    networks:
      - backend
    volumes:
      - ./db:/db
    init: true
    stdin_open: true
    tty: true
  fastapi:
    container_name: fastapi
    build: 
      context: ./FastAPI
      dockerfile: ../Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    networks:
      - backend
    volumes:
      - ./db:/db
    command: uvicorn fast_api_test_server:app --host 0.0.0.0 --port 8000

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
